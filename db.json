{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/light/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":1},{"_id":"themes/light/source/js/gallery.js","path":"js/gallery.js","modified":1},{"_id":"themes/light/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1},{"_id":"themes/light/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1},{"_id":"themes/light/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1},{"_id":"themes/light/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1},{"_id":"themes/light/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1},{"_id":"themes/light/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1},{"_id":"themes/light/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1},{"_id":"themes/light/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1},{"_id":"themes/light/source/css/style.styl","path":"css/style.styl","modified":1},{"_id":"themes/light/source/css/font/fontawesome-webfont.woff","path":"css/font/fontawesome-webfont.woff","modified":1},{"_id":"themes/light/source/css/font/fontawesome-webfont.ttf","path":"css/font/fontawesome-webfont.ttf","modified":1},{"_id":"themes/light/source/css/font/fontawesome-webfont.svg","path":"css/font/fontawesome-webfont.svg","modified":1},{"_id":"themes/light/source/css/font/fontawesome-webfont.eot","path":"css/font/fontawesome-webfont.eot","modified":1}],"Cache":[{"_id":"source/_posts/esplugins/bigdesk01.png","shasum":"61edf6dd755a1b7ed8d705295725a9f67a841067","modified":1447905862071},{"_id":"source/_posts/esplugins/head01.png","shasum":"530712f43fd645bd799ce1635409139c115a7c6b","modified":1447903488848},{"_id":"source/_posts/elasticsearch.md","shasum":"1add3da1a5d94d17844575f72e83da52eef025f6","modified":1447911357447},{"_id":"source/_posts/gitandhexo/git1.png","shasum":"4fa9e3759cb382ebe8cfa8398773214179401900","modified":1449113272340},{"_id":"source/_posts/gitandhexo.md","shasum":"3469ed70dead7dcebac0bc0dca84bc21c841f285","modified":1449114767235},{"_id":"source/_posts/esplugins.md","shasum":"902694ebf233607f1a85afbeccc9726f6f70a090","modified":1447920578852},{"_id":"source/_posts/useik/ik01.png","shasum":"107f4a782ec1ea59e9fa11898808c02841bc8d34","modified":1447922543863},{"_id":"source/_posts/howtosearch.md","shasum":"0039ae1225f9b41a8513c8d7601d7522e107e392","modified":1447921953059},{"_id":"source/_posts/useik.md","shasum":"7014418deb91b31717bb24ba1aaf2ebcb4d8e089","modified":1447984726078},{"_id":"source/_posts/usepinyin.md","shasum":"4d0ed89660f15a844bc438933cb3203e6a30521a","modified":1449112966775},{"_id":"source/_posts/esplugins/kopf01.png","shasum":"e0932b1261507995957ad4df83157b4f0de7779c","modified":1447910037396},{"_id":"source/_posts/esplugins/sense.png","shasum":"86f0b1e5fb898b744e83a29230c9a280978a7a6b","modified":1447917645546},{"_id":"source/_posts/useikconfig.md","shasum":"07d962c37c0622ffc0ca91252da29436c2461a91","modified":1447986393255},{"_id":"themes/light/source/css/_base/utils.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1447912506031},{"_id":"source/_posts/esrestapi.md","shasum":"05c0d318309ed366a272b26bd0914451d7458270","modified":1447922248355},{"_id":"themes/light/LICENSE","shasum":"17d3ed51d6d6962155f7dacd4f101f4969ad0bbe","modified":1447912505868},{"_id":"themes/light/languages/default.yml","shasum":"feb1dd022dc8897d65baa5b927de2a3d4178d798","modified":1447912505881},{"_id":"themes/light/languages/de.yml","shasum":"1ebe2d4f1b48c84e004c933bec65731fb54c9998","modified":1447912505878},{"_id":"themes/light/languages/ru.yml","shasum":"37161bb9b6cc2dae1f53837185be32e7a0b8abfa","modified":1447912505887},{"_id":"themes/light/_config.yml","shasum":"c9893508c68c9077d3035e0599b4c27a3901ec2c","modified":1447912505875},{"_id":"themes/light/README.md","shasum":"f9adc61563e8824ec507911dc7df70655a534378","modified":1447912505872},{"_id":"themes/light/layout/_partial/after_footer.ejs","shasum":"ef5e7c5e3a05c80f25a7173ea742646bb521cfed","modified":1447912505901},{"_id":"themes/light/languages/zh-TW.yml","shasum":"b2474b775a8fa0fa3e9e3c58ddb11b20cf65dbc5","modified":1447912505892},{"_id":"themes/light/layout/_partial/archive.ejs","shasum":"eaab5ad657f16dfc6cff6f462e1234c3cb8f23a0","modified":1447912505910},{"_id":"themes/light/languages/zh-CN.yml","shasum":"751f1a2bbfb6736c71e846493ae0fb7ef7dc778d","modified":1447912505889},{"_id":"themes/light/layout/_partial/comment.ejs","shasum":"56786339f66a1fb56d29070633b27bd34ae3f9c3","modified":1447912505923},{"_id":"themes/light/languages/es.yml","shasum":"727707b95580bbe9773edef4c84a9735fd537742","modified":1447912505883},{"_id":"themes/light/layout/_partial/footer.ejs","shasum":"092bea0a0cdb4ab976723bbce3771bc35a96fdc6","modified":1447912505931},{"_id":"themes/light/layout/_partial/google_analytics.ejs","shasum":"d70d287956e90e99ba35b2e14cefb477f9203aa0","modified":1447912505951},{"_id":"themes/light/layout/_partial/header.ejs","shasum":"73c45d7426009feb495710b054868a7f10616178","modified":1447912505962},{"_id":"themes/light/layout/_partial/pagination.ejs","shasum":"5a3c65842354b04c7839c915c045d39be9342cdf","modified":1447912505965},{"_id":"themes/light/layout/_partial/post/category.ejs","shasum":"8bb3f6ee6296df5a0d527b30d5a46a2387b97cb7","modified":1447912505972},{"_id":"themes/light/layout/_partial/head.ejs","shasum":"2e76dc3c550fcbce0d5dcf5a4b7a11ef1203c3e7","modified":1447912505960},{"_id":"themes/light/layout/_partial/post/gallery.ejs","shasum":"fc23ef9b5a412e05436f68ff47146b860d2d4225","modified":1447912505973},{"_id":"themes/light/layout/_partial/post/tag.ejs","shasum":"b21bbfb5479bd5968a610ba8bdb2bdf10d7a40e9","modified":1447912505980},{"_id":"themes/light/layout/_partial/article.ejs","shasum":"57bf574e0c7955b532903a3f3ba7218235b16d8f","modified":1447912505917},{"_id":"themes/light/layout/_partial/post/title.ejs","shasum":"7f93b310927d6238effdde15234d8cb242940893","modified":1447912505983},{"_id":"themes/light/layout/_widget/category.ejs","shasum":"c163a146b0f963f257ddcc244f413bef281fe0a0","modified":1447912505992},{"_id":"themes/light/layout/_partial/post/share.ejs","shasum":"991cf130c37f08c7e948772fb45587592b165b55","modified":1447912505974},{"_id":"themes/light/layout/_partial/sidebar.ejs","shasum":"016441ca9534769d8e151cffe4027686e9c86f18","modified":1447912505988},{"_id":"themes/light/layout/_widget/tag.ejs","shasum":"6bf8214fedb8d6306e017e07ad67aab956496500","modified":1447912506004},{"_id":"themes/light/layout/_widget/tagcloud.ejs","shasum":"139e91b1e6abcc1e3883bcc03a9a1a7f1d891d7a","modified":1447912506007},{"_id":"themes/light/layout/archive.ejs","shasum":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1447912506009},{"_id":"themes/light/layout/category.ejs","shasum":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1447912506011},{"_id":"themes/light/layout/index.ejs","shasum":"c7cf84c84c26f1adfc249bc9a7605206fa245f73","modified":1447912506016},{"_id":"themes/light/layout/layout.ejs","shasum":"6999916072898aedfe13f4a07211dd1578ad4799","modified":1447912506020},{"_id":"themes/light/layout/page.ejs","shasum":"70cbc9854655773cc6ba84eecaaf330fed430465","modified":1447912506024},{"_id":"themes/light/layout/post.ejs","shasum":"70cbc9854655773cc6ba84eecaaf330fed430465","modified":1447912506025},{"_id":"themes/light/layout/tag.ejs","shasum":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1447912506025},{"_id":"themes/light/source/css/_base/layout.styl","shasum":"b26cd4768466f637b620029b314dd50a06c98b8c","modified":1447912506030},{"_id":"themes/light/layout/_widget/recent_posts.ejs","shasum":"59f6f8362fa23a6215e3381151a59c2e2a5fd0d3","modified":1447912505996},{"_id":"themes/light/source/css/_base/variable.styl","shasum":"832fecbb623c8fba9419d6a93586126d44b43cc6","modified":1447912506033},{"_id":"themes/light/layout/_widget/search.ejs","shasum":"93d4a690494dfa405024f23511846ea00d647be7","modified":1447912506000},{"_id":"themes/light/source/css/_partial/comment.styl","shasum":"6fa67d96903ac3b1674e6c8d4c801e16115808e0","modified":1447912506043},{"_id":"themes/light/source/css/_partial/footer.styl","shasum":"821d50a9d45afec0274e1e64c2b37a71f3611c01","modified":1447912506046},{"_id":"themes/light/source/css/_partial/header.styl","shasum":"ad67bf40a0cafb1e5514b058c853c517e602fe44","modified":1447912506049},{"_id":"themes/light/source/css/_partial/index.styl","shasum":"eb0f1536a57cca57d9a280191fbb63185c266ee8","modified":1447912506052},{"_id":"themes/light/source/css/_partial/sidebar.styl","shasum":"213a16c3206d045ca01b0abf8891e96421d61fb9","modified":1447912506055},{"_id":"themes/light/source/css/_partial/syntax.styl","shasum":"bb6d6441aad58af730140bac83c880ac3050bd77","modified":1447912506058},{"_id":"themes/light/layout/_partial/facebook_comment.ejs","shasum":"49ee54e84fe2b70bd9540e2eeba5a85f744941b0","modified":1447912505928},{"_id":"themes/light/source/css/_partial/archive.styl","shasum":"b6fa84ea80bfbdb3a93f64c06a8c652e4242128e","modified":1447912506037},{"_id":"themes/light/source/css/font/fontawesome-webfont.eot","shasum":"d775f599ff3f23be082e6a9604b4898718923a37","modified":1447912506069},{"_id":"themes/light/source/css/font/fontawesome-webfont.woff","shasum":"0612cddf2f835cceffccc88fd194f97367d0b024","modified":1447912506086},{"_id":"themes/light/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1447912506092},{"_id":"themes/light/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1447912506093},{"_id":"themes/light/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1447912506095},{"_id":"themes/light/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1447912506096},{"_id":"themes/light/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1447912506097},{"_id":"themes/light/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1447912506098},{"_id":"themes/light/source/fancybox/jquery.fancybox.css","shasum":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1447912506101},{"_id":"themes/light/source/fancybox/jquery.fancybox.pack.js","shasum":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1447912506110},{"_id":"themes/light/source/js/gallery.js","shasum":"735a714e54f0ac229f292a90df3a1f882904f6c7","modified":1447912506114},{"_id":"themes/light/source/js/jquery.imagesloaded.min.js","shasum":"28ef4346743a60c896a9ae492a544c0854904350","modified":1447912506115},{"_id":"themes/light/source/css/font/fontawesome-webfont.svg","shasum":"ff51bbb11dfe58345f41cead2c425d6e8be28176","modified":1447912506077},{"_id":"themes/light/source/css/_partial/article.styl","shasum":"9efddb26851b45a536898a84f6fa1ccf71920fca","modified":1447912506040},{"_id":"themes/light/source/css/style.styl","shasum":"8e8458e78717c49c4ff278b741258d77301f6be4","modified":1447912506089},{"_id":"themes/light/source/css/font/fontawesome-webfont.ttf","shasum":"a9468f6a1fe965fbcaf5a1bd6c11705e2fc5f84c","modified":1447912506083},{"_id":"public/js/jquery.imagesloaded.min.js","modified":1449114788794,"shasum":"4109837b1f6477bacc6b095a863b1b95b1b3693f"},{"_id":"public/js/gallery.js","modified":1449114788806,"shasum":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1449114788818,"shasum":"53360764b429c212f424399384417ccc233bb3be"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1449114788833,"shasum":"5f163444617b6cf267342f06ac166a237bb62df9"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1449114788844,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1449114788853,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1449114788858,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1449114788864,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1449114788880,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1449114788887,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1449114789601,"shasum":"c1f50770fa10e71f85c4b7f26bb821924de38f53"},{"_id":"public/css/font/fontawesome-webfont.woff","modified":1449114789719,"shasum":"0612cddf2f835cceffccc88fd194f97367d0b024"},{"_id":"public/css/font/fontawesome-webfont.ttf","modified":1449114789731,"shasum":"a9468f6a1fe965fbcaf5a1bd6c11705e2fc5f84c"},{"_id":"public/css/font/fontawesome-webfont.svg","modified":1449114789746,"shasum":"ff51bbb11dfe58345f41cead2c425d6e8be28176"},{"_id":"public/css/font/fontawesome-webfont.eot","modified":1449114789762,"shasum":"d775f599ff3f23be082e6a9604b4898718923a37"},{"_id":"public/2015/11/19/useik/ik01.png","modified":1449114789780,"shasum":"107f4a782ec1ea59e9fa11898808c02841bc8d34"},{"_id":"public/2015/11/19/esplugins/bigdesk01.png","modified":1449114789794,"shasum":"61edf6dd755a1b7ed8d705295725a9f67a841067"},{"_id":"public/2015/11/19/esplugins/head01.png","modified":1449114789817,"shasum":"530712f43fd645bd799ce1635409139c115a7c6b"},{"_id":"public/2015/11/19/esplugins/kopf01.png","modified":1449114789822,"shasum":"e0932b1261507995957ad4df83157b4f0de7779c"},{"_id":"public/2015/11/19/esplugins/sense.png","modified":1449114789829,"shasum":"86f0b1e5fb898b744e83a29230c9a280978a7a6b"},{"_id":"public/2015/11/20/useikconfig/index.html","modified":1449114789882,"shasum":"ef3407d9668314ad8483d1d84bcf9cc33eeb9c23"},{"_id":"public/2015/11/19/howtosearch/index.html","modified":1449114789912,"shasum":"1aea170da9ab3f9527c71043673d9790fbb75c20"},{"_id":"public/2015/11/19/usepinyin/index.html","modified":1449114789935,"shasum":"d062b325b6e83381e3fb0b67defc4c6ac7cebb06"},{"_id":"public/2015/11/19/useik/index.html","modified":1449114789965,"shasum":"ad0a57541221bd825fb69ce27a54e54e9e9ddd54"},{"_id":"public/2015/11/19/esrestapi/index.html","modified":1449114789993,"shasum":"ee44951c9475eb8c1a89e5816c1d9eaa954027b0"},{"_id":"public/2015/11/19/esplugins/index.html","modified":1449114790019,"shasum":"d0a8344fde73aa4a1ba13643871ad1a099d37286"},{"_id":"public/2015/11/18/elasticsearch/index.html","modified":1449114790035,"shasum":"faefd817a8015f187dac4c04cf22ee4073519748"},{"_id":"public/archives/index.html","modified":1449114790060,"shasum":"af35ebc039c6cb21611efbf19fd3ae80485a67af"},{"_id":"public/archives/2015/index.html","modified":1449114790076,"shasum":"29c3a4c98d9d31ad18ade8ebcf29ac46b6e67771"},{"_id":"public/archives/2015/11/index.html","modified":1449114790092,"shasum":"297636c121308831137bcede4ef35c160629c912"},{"_id":"public/index.html","modified":1449114790111,"shasum":"11d499c111b6406e2c310b076507c1f522df9d0b"},{"_id":"public/tags/elasticsearch/index.html","modified":1449114790132,"shasum":"64b919a6b6d305b5892fa8e727f0436c254e772f"},{"_id":"public/tags/plugin/index.html","modified":1449114790153,"shasum":"09bf12086a70e1aca028afc95e888ccea29d8152"},{"_id":"public/tags/pinyin/index.html","modified":1449114790178,"shasum":"0b4dd4661b726c65c15b2de5d8a2bec4f02ede00"},{"_id":"public/tags/分词/index.html","modified":1449114790196,"shasum":"76bcfaed1e93ea626b36f91c8dc435defd1dd28d"},{"_id":"public/tags/ik/index.html","modified":1449114790214,"shasum":"d264c51e28cd4676638369dbd2a2a4ded16abba2"},{"_id":"public/tags/api/index.html","modified":1449114790229,"shasum":"83b7bddabd16e87c9d7d2d1517ea5d473d3b124d"},{"_id":"public/tags/REST/index.html","modified":1449114790245,"shasum":"1a0360a1a3b4fe335aa821b579d86873e5dabb64"},{"_id":"public/tags/head/index.html","modified":1449114790256,"shasum":"fb43b023898e5e2fbc0cd7e4f7373aa03eacd31b"},{"_id":"public/tags/bigdesk/index.html","modified":1449114790274,"shasum":"ee980eeaa04c28ca2512b3e52f8c1c4213e5b2fa"},{"_id":"public/tags/kopf/index.html","modified":1449114790289,"shasum":"92aea93342143d3419de5e224aa96352290a2032"}],"Category":[],"Data":[],"Page":[],"Post":[{"layout":"elasticsearch","title":"elasticsearch 开始","date":"2015-11-18T06:05:41.000Z","_content":"[Elasticsearch](https://www.elastic.co/) 来源于作者 [Shay Banon](http://www.linkedin.com/in/shaybanon) 的第一个开源项目 Compass 库，而这个 Java 库最初的目的只是为了给 Shay 当时正在学厨师的妻子做一个菜谱的搜索引擎。2010 年，Elasticsearch 正式发布。至今已经成为 GitHub 上最流行的 Java 项目，不过 Shay 承诺给妻子的菜谱搜索依然没有面世……\n<!--more-->\n## 一、如何开始\n### 1.1下载Elasticsearch\n```\nhttps://www.elastic.co/downloads/elasticsearch\n```\n### 1.2运行Elasticsearch\n```\nbin/elasticsearch\n```\n### 1.3打开浏览器查看运行结果\n```\nhttp://localhost:9200\n```\n```\n{\n  \"status\" : 200,\n  \"name\" : \"NODE01\",\n  \"cluster_name\" : \"cluster01\",\n  \"version\" : {\n    \"number\" : \"1.7.2\",\n    \"build_hash\" : \"e43676b1385b8125d647f593f7202acbd816e8ec\",\n    \"build_timestamp\" : \"2015-09-14T09:49:53Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"4.10.4\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n```\n至此，跟Search说Hello吧！\n## 二、接口使用\n### 2.1 增删改查\n增删改查是数据库的基础操作方法。ES 虽然不是数据库，但是很多场合下，都被人们当做一个文档型 NoSQL 数据库在使用，原因自然是因为在接口和分布式架构层面的相似性。\n#### 数据写入\nES 的一大特点，就是全 RESTful 接口处理 JSON 请求。所以，数据写入非常简单：\n```\n$ curl -XPOST 'http://127.0.0.1:9200/myindex/test' -d '{\n    \"user\":\"atomyliu\",\n    \"msg\":\"The first message into Elasticsearch\"\n}'\n```\n命令相应结果为：\n```\n{\"_index\":\"myindex\",\"_type\":\"test\",\"_id\":\"AVEdgOTcAe4-VLSojoKP\",\"_version\":1,\"created\":true}\n```\n#### 数据获取\n可以看到，在数据写入的时候，会返回该数据的 `_id` 。这就是后续用来获取数据的关键：\n```\n$ curl -XGET 'http://localhost:9201/myindex/test/AVEdgOTcAe4-VLSojoKP'\n```\n命令返回响应结果为：\n```\n{\"_index\":\"myindex\",\"_type\":\"test\",\"_id\":\"AVEdgOTcAe4-VLSojoKP\",\"_version\":1,\"found\":true,\"_source\":{\n    \"user\":\"atomyliu\",\n    \"msg\":\"first\"\n}}\n```\n这个`_source`里的内容，正是之前写入的数据。\n#### 数据删除\n要删除数据，修改发送的 HTTP 请求方法为 DELETE 即可：\n```\n$ curl -XDELETE 'http://localhost:9201/myindex/test/AVEdgOTcAe4-VLSojoKP'\n```\n#### 数据更新\n已经写过的数据，同样还是可以修改的。有两种办法，一种是全量提交，即指明`_id`再发送一次写入请求。\n另一种是局部更新，使用 `/_update` 接口：\n```\n$ curl -XPOST 'http://127.0.0.1:9200/myindex/test/AVEdgOTcAe4-VLSojoKP/_update' -d '{\n    \"user\":\"atomyliu123\",\n    \"msg\":\"The first message into Elasticsearch\"\n}'\n```","source":"_posts/elasticsearch.md","raw":"layout: elasticsearch\ntitle: elasticsearch 开始\ndate: 2015-11-18 14:05:41\ntags: elasticsearch\n---\n[Elasticsearch](https://www.elastic.co/) 来源于作者 [Shay Banon](http://www.linkedin.com/in/shaybanon) 的第一个开源项目 Compass 库，而这个 Java 库最初的目的只是为了给 Shay 当时正在学厨师的妻子做一个菜谱的搜索引擎。2010 年，Elasticsearch 正式发布。至今已经成为 GitHub 上最流行的 Java 项目，不过 Shay 承诺给妻子的菜谱搜索依然没有面世……\n<!--more-->\n## 一、如何开始\n### 1.1下载Elasticsearch\n```\nhttps://www.elastic.co/downloads/elasticsearch\n```\n### 1.2运行Elasticsearch\n```\nbin/elasticsearch\n```\n### 1.3打开浏览器查看运行结果\n```\nhttp://localhost:9200\n```\n```\n{\n  \"status\" : 200,\n  \"name\" : \"NODE01\",\n  \"cluster_name\" : \"cluster01\",\n  \"version\" : {\n    \"number\" : \"1.7.2\",\n    \"build_hash\" : \"e43676b1385b8125d647f593f7202acbd816e8ec\",\n    \"build_timestamp\" : \"2015-09-14T09:49:53Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"4.10.4\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n```\n至此，跟Search说Hello吧！\n## 二、接口使用\n### 2.1 增删改查\n增删改查是数据库的基础操作方法。ES 虽然不是数据库，但是很多场合下，都被人们当做一个文档型 NoSQL 数据库在使用，原因自然是因为在接口和分布式架构层面的相似性。\n#### 数据写入\nES 的一大特点，就是全 RESTful 接口处理 JSON 请求。所以，数据写入非常简单：\n```\n$ curl -XPOST 'http://127.0.0.1:9200/myindex/test' -d '{\n    \"user\":\"atomyliu\",\n    \"msg\":\"The first message into Elasticsearch\"\n}'\n```\n命令相应结果为：\n```\n{\"_index\":\"myindex\",\"_type\":\"test\",\"_id\":\"AVEdgOTcAe4-VLSojoKP\",\"_version\":1,\"created\":true}\n```\n#### 数据获取\n可以看到，在数据写入的时候，会返回该数据的 `_id` 。这就是后续用来获取数据的关键：\n```\n$ curl -XGET 'http://localhost:9201/myindex/test/AVEdgOTcAe4-VLSojoKP'\n```\n命令返回响应结果为：\n```\n{\"_index\":\"myindex\",\"_type\":\"test\",\"_id\":\"AVEdgOTcAe4-VLSojoKP\",\"_version\":1,\"found\":true,\"_source\":{\n    \"user\":\"atomyliu\",\n    \"msg\":\"first\"\n}}\n```\n这个`_source`里的内容，正是之前写入的数据。\n#### 数据删除\n要删除数据，修改发送的 HTTP 请求方法为 DELETE 即可：\n```\n$ curl -XDELETE 'http://localhost:9201/myindex/test/AVEdgOTcAe4-VLSojoKP'\n```\n#### 数据更新\n已经写过的数据，同样还是可以修改的。有两种办法，一种是全量提交，即指明`_id`再发送一次写入请求。\n另一种是局部更新，使用 `/_update` 接口：\n```\n$ curl -XPOST 'http://127.0.0.1:9200/myindex/test/AVEdgOTcAe4-VLSojoKP/_update' -d '{\n    \"user\":\"atomyliu123\",\n    \"msg\":\"The first message into Elasticsearch\"\n}'\n```","slug":"elasticsearch","published":1,"updated":"2015-11-19T05:35:57.447Z","comments":1,"photos":[],"link":"","_id":"cihppj1e00000ko36q1wq7krc"},{"layout":"elasticsearch","title":"ElasticSearch使用elasticsearch-analysis-pinyin","date":"2015-11-19T08:31:48.000Z","_content":"\n","source":"_posts/usepinyin.md","raw":"layout: elasticsearch\ntitle: ElasticSearch使用elasticsearch-analysis-pinyin\ndate: 2015-11-19 16:31:48\ntags: [elasticsearch,plugin,pinyin,分词]\n---\n\n","slug":"usepinyin","published":1,"updated":"2015-12-03T03:22:46.775Z","comments":1,"photos":[],"link":"","_id":"cihppj1ei0003ko361kjgqthu"},{"layout":"elasticsearch","title":"ElasticSearch使用elasticsearch-analysis-ik 进阶篇","date":"2015-11-20T02:05:03.000Z","_content":"### 分词配置\n上一篇我们介绍了如何使用ik分词，这一篇我们讲讲ik分词的高级使用方式。<br/>\n<!--more-->\nik分词在作为elasticsearch的分词插件中，目前运用的比较广泛，因此其扩展性也是很强的。<br/>\n下面我们从配置文件来看：`elasticsearch-1.7.1\\config\\elasticsearch.yml`\n```\n################################## ik ################################\nindex:\n  analysis:\n    analyzer:\n      ik:\n          alias: [ik_analyzer]\n          type: org.elasticsearch.index.analysis.IkAnalyzerProvider\n          char_filter: html_strip\n      ik_max_word:\n          type: ik\n          use_smart: false\n      ik_smart:\n          type: ik\n          use_smart: true\n    tokenizer:\n      ik_smart:\n          type: ik\n          use_smart: true\n```\n这段配置文件中应以了三个分析器，分别是`ik`,`ik_max_word`,`ik_smart`,其实，这就给我们提供了多种颗粒度的分词选择，其中`ik`是使用默认词典进行通用的分词，`ik_max_word`继承于`ik`,两者基本相同，`ik_smart`使用了``use_smart``,提供了比较粗颗粒度的分析效果。\n这些参数都可以进行自行配置，详细的可以参考一下官方[elasticsearch-analysis-ik](https://github.com/medcl/elasticsearch-analysis-ik)。 <br/>\n当然，如果你只是想简单的运用，不想那么繁琐的设置，上面那一大段配置文件也可以简写成：\n```\nindex.analysis.analyzer.ik.type : \"ik\"\n```\n或者可以在创建索引时写在`settings`里。<br/>\n### 词典配置\nik给了我们对词典的选择性，首先找到ik的配置文件<br/>\n`config/ik/IKAnalyzer.cfg.xml`\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n<properties>\n    <comment>IK Analyzer 扩展配置</comment>\n    <!--用户可以在这里配置自己的扩展字典 -->\n    <entry key=\"ext_dict\">custom/mydict.dic;custom/single_word_low_freq.dic</entry>\n    <!--用户可以在这里配置自己的扩展停止词字典-->\n    <entry key=\"ext_stopwords\">custom/ext_stopword.dic</entry>\n    <!--用户可以在这里配置远程扩展字典 -->\n    <entry key=\"remote_ext_dict\">location</entry>\n    <!--用户可以在这里配置远程扩展停止词字典-->\n    <entry key=\"remote_ext_stopwords\">http://xxx.com/xxx.dic</entry>\n</properties>\n```\n所有可以使用的字典都在这里进行配置，我们也可以自己来整理和维护词典。\n #### 热词更新ik分词使用方法\n ```\n     <!--用户可以在这里配置远程扩展字典 -->\n     <entry key=\"remote_ext_dict\">location</entry>\n     <!--用户可以在这里配置远程扩展停止词字典-->\n     <entry key=\"remote_ext_stopwords\">location</entry>\n ```\n其中`location`是指url，比如`http://localhost:8080/mydic.txt`,该请求满足两个条件即可完成热词更新。<br/>\n1. 该 http 请求需要返回两个头部(header)，一个是 `Last-Modified`，一个是 `ETag`，这两者都是字符串类型，只要有一个发生变化，该插件就会去抓取新的分词进而更新词库。<br/>\n2. 该 http 请求返回的内容格式是一行一个分词，换行符用 `\\n` 即可。<br/>\n满足上面两点要求就可以实现热更新分词了，不需要重启 ES 实例。<br/>\n可以将需自动更新的热词放在一个 UTF-8 编码的 .txt 文件里，放在 nginx 或其他简易 http server 下，当 .txt 文件修改时，http server 会在客户端请求该文件时自动返回相应的 `Last-Modified` 和 `ETag`。可以另外做一个工具来从业务系统提取相关词汇，并更新这个 .txt 文件。","source":"_posts/useikconfig.md","raw":"layout: elasticsearch\ntitle: ElasticSearch使用elasticsearch-analysis-ik 进阶篇\ndate: 2015-11-20 10:05:03\ntags: [elasticsearch,plugin,ik,分词]\n---\n### 分词配置\n上一篇我们介绍了如何使用ik分词，这一篇我们讲讲ik分词的高级使用方式。<br/>\n<!--more-->\nik分词在作为elasticsearch的分词插件中，目前运用的比较广泛，因此其扩展性也是很强的。<br/>\n下面我们从配置文件来看：`elasticsearch-1.7.1\\config\\elasticsearch.yml`\n```\n################################## ik ################################\nindex:\n  analysis:\n    analyzer:\n      ik:\n          alias: [ik_analyzer]\n          type: org.elasticsearch.index.analysis.IkAnalyzerProvider\n          char_filter: html_strip\n      ik_max_word:\n          type: ik\n          use_smart: false\n      ik_smart:\n          type: ik\n          use_smart: true\n    tokenizer:\n      ik_smart:\n          type: ik\n          use_smart: true\n```\n这段配置文件中应以了三个分析器，分别是`ik`,`ik_max_word`,`ik_smart`,其实，这就给我们提供了多种颗粒度的分词选择，其中`ik`是使用默认词典进行通用的分词，`ik_max_word`继承于`ik`,两者基本相同，`ik_smart`使用了``use_smart``,提供了比较粗颗粒度的分析效果。\n这些参数都可以进行自行配置，详细的可以参考一下官方[elasticsearch-analysis-ik](https://github.com/medcl/elasticsearch-analysis-ik)。 <br/>\n当然，如果你只是想简单的运用，不想那么繁琐的设置，上面那一大段配置文件也可以简写成：\n```\nindex.analysis.analyzer.ik.type : \"ik\"\n```\n或者可以在创建索引时写在`settings`里。<br/>\n### 词典配置\nik给了我们对词典的选择性，首先找到ik的配置文件<br/>\n`config/ik/IKAnalyzer.cfg.xml`\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n<properties>\n    <comment>IK Analyzer 扩展配置</comment>\n    <!--用户可以在这里配置自己的扩展字典 -->\n    <entry key=\"ext_dict\">custom/mydict.dic;custom/single_word_low_freq.dic</entry>\n    <!--用户可以在这里配置自己的扩展停止词字典-->\n    <entry key=\"ext_stopwords\">custom/ext_stopword.dic</entry>\n    <!--用户可以在这里配置远程扩展字典 -->\n    <entry key=\"remote_ext_dict\">location</entry>\n    <!--用户可以在这里配置远程扩展停止词字典-->\n    <entry key=\"remote_ext_stopwords\">http://xxx.com/xxx.dic</entry>\n</properties>\n```\n所有可以使用的字典都在这里进行配置，我们也可以自己来整理和维护词典。\n #### 热词更新ik分词使用方法\n ```\n     <!--用户可以在这里配置远程扩展字典 -->\n     <entry key=\"remote_ext_dict\">location</entry>\n     <!--用户可以在这里配置远程扩展停止词字典-->\n     <entry key=\"remote_ext_stopwords\">location</entry>\n ```\n其中`location`是指url，比如`http://localhost:8080/mydic.txt`,该请求满足两个条件即可完成热词更新。<br/>\n1. 该 http 请求需要返回两个头部(header)，一个是 `Last-Modified`，一个是 `ETag`，这两者都是字符串类型，只要有一个发生变化，该插件就会去抓取新的分词进而更新词库。<br/>\n2. 该 http 请求返回的内容格式是一行一个分词，换行符用 `\\n` 即可。<br/>\n满足上面两点要求就可以实现热更新分词了，不需要重启 ES 实例。<br/>\n可以将需自动更新的热词放在一个 UTF-8 编码的 .txt 文件里，放在 nginx 或其他简易 http server 下，当 .txt 文件修改时，http server 会在客户端请求该文件时自动返回相应的 `Last-Modified` 和 `ETag`。可以另外做一个工具来从业务系统提取相关词汇，并更新这个 .txt 文件。","slug":"useikconfig","published":1,"updated":"2015-11-20T02:26:33.255Z","comments":1,"photos":[],"link":"","_id":"cihppj1ep000bko367b7ytkli"},{"layout":"elasticsearch","title":"ElasticSearch使用elasticsearch-analysis-ik","date":"2015-11-19T08:31:48.000Z","_content":"感谢Medcl带来的ik分词插件。</br>\n为什么要用ik?</br>\n因为Elasticsearch本身不支持中文分词，使用默认的解析器会把中文分解成单个字，查询的时候很不方便。\n<!--more-->\n#### 下载ik插件\n```\nhttps://github.com/medcl/elasticsearch-analysis-ik\n```\n#### Maven打包，生成jar包\n```\nmvn clean package\n```\n### 安装插件\n```\nplugin —install analysis-ik —url file:///#{project_path}/elasticsearch-analysis-ik/target/releases/elasticsearch-analysis-ik-1.4.0.zip\n```\n其实这种方式就是将jar包拷贝到`elasticsearch/plugins`目录下。\n<img src=\"ik01.png\" />\n然后，将`elasticsearch-analysis-ik-master\\config\\ik`目录复制到`elasticsearch\\config`目录中。\n修改`elasticsearch/config/elasticsearch.yml`文件，在最下方添加：\n```\n################################## ik ################################\nindex:\n  analysis:\n    analyzer:\n      ik:\n          alias: [ik_analyzer]\n          type: org.elasticsearch.index.analysis.IkAnalyzerProvider\n          char_filter: html_strip\n      ik_max_word:\n          type: ik\n          use_smart: false\n      ik_smart:\n          type: ik\n          use_smart: true\n    tokenizer:\n      ik_smart:\n          type: ik\n          use_smart: true\n```\n启动elasticsearch服务，至此ik插件就完成安装了。<br/>\n现在我们来测试一下,首先我们来创建一个索引<br/>\n```\nPOST /index  #创建索引\n\nPOST /index/iktest/_mapping  #创建映射\n{\n    \"iktest\":{\n        \"properties\": {\n            \"test\":{\n                \"type\": \"string\",\n                \"analyzer\": \"ik\"\n            }\n        }\n    }\n}\n```\n返回结果\n```\n{\n   \"acknowledged\": true\n}\n```\n使用elasticsearch的分析器测试api\n```\nGET /index/_analyze?analyzer=ik&pretty=true\n{\n    \"地球如此大\"\n}\n```\n返回结果\n```\n{\n   \"tokens\": [\n      {\n         \"token\": \"地球\",\n         \"start_offset\": 8,\n         \"end_offset\": 10,\n         \"type\": \"CN_WORD\",\n         \"position\": 1\n      },\n      {\n         \"token\": \"如此\",\n         \"start_offset\": 10,\n         \"end_offset\": 12,\n         \"type\": \"CN_WORD\",\n         \"position\": 2\n      },\n      {\n         \"token\": \"如\",\n         \"start_offset\": 10,\n         \"end_offset\": 11,\n         \"type\": \"CN_WORD\",\n         \"position\": 3\n      },\n      {\n         \"token\": \"此\",\n         \"start_offset\": 11,\n         \"end_offset\": 12,\n         \"type\": \"CN_CHAR\",\n         \"position\": 4\n      },\n      {\n         \"token\": \"大\",\n         \"start_offset\": 12,\n         \"end_offset\": 13,\n         \"type\": \"CN_WORD\",\n         \"position\": 5\n      }\n   ]\n}\n```\n现在我们插入一条数据\n```\nPOST /index/iktest/1\n{\n    \"test\":\"我们要保护地球\"\n}\n```\n```\n{\n   \"_index\": \"index\",\n   \"_type\": \"iktest\",\n   \"_id\": \"1\",\n   \"_version\": 1,\n   \"created\": true\n}\n```\n搜索一下\n```\nPOST /index/iktest/_search\n{\n    \"query\": {\n        \"term\": {\n           \"test\": {\n              \"value\": \"我们\"\n           }\n        }\n    }\n}\n```\n返回结果\n```\n{\n   \"took\": 2,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 5,\n      \"successful\": 5,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 1,\n      \"max_score\": 0.11506981,\n      \"hits\": [\n         {\n            \"_index\": \"index\",\n            \"_type\": \"iktest\",\n            \"_id\": \"1\",\n            \"_score\": 0.11506981,\n            \"_source\": {\n               \"test\": \"我们要保护地球\"\n            }\n         }\n      ]\n   }\n}\n```","source":"_posts/useik.md","raw":"layout: elasticsearch\ntitle: ElasticSearch使用elasticsearch-analysis-ik\ndate: 2015-11-19 16:31:48\ntags: [elasticsearch,plugin,ik,分词]\n---\n感谢Medcl带来的ik分词插件。</br>\n为什么要用ik?</br>\n因为Elasticsearch本身不支持中文分词，使用默认的解析器会把中文分解成单个字，查询的时候很不方便。\n<!--more-->\n#### 下载ik插件\n```\nhttps://github.com/medcl/elasticsearch-analysis-ik\n```\n#### Maven打包，生成jar包\n```\nmvn clean package\n```\n### 安装插件\n```\nplugin —install analysis-ik —url file:///#{project_path}/elasticsearch-analysis-ik/target/releases/elasticsearch-analysis-ik-1.4.0.zip\n```\n其实这种方式就是将jar包拷贝到`elasticsearch/plugins`目录下。\n<img src=\"ik01.png\" />\n然后，将`elasticsearch-analysis-ik-master\\config\\ik`目录复制到`elasticsearch\\config`目录中。\n修改`elasticsearch/config/elasticsearch.yml`文件，在最下方添加：\n```\n################################## ik ################################\nindex:\n  analysis:\n    analyzer:\n      ik:\n          alias: [ik_analyzer]\n          type: org.elasticsearch.index.analysis.IkAnalyzerProvider\n          char_filter: html_strip\n      ik_max_word:\n          type: ik\n          use_smart: false\n      ik_smart:\n          type: ik\n          use_smart: true\n    tokenizer:\n      ik_smart:\n          type: ik\n          use_smart: true\n```\n启动elasticsearch服务，至此ik插件就完成安装了。<br/>\n现在我们来测试一下,首先我们来创建一个索引<br/>\n```\nPOST /index  #创建索引\n\nPOST /index/iktest/_mapping  #创建映射\n{\n    \"iktest\":{\n        \"properties\": {\n            \"test\":{\n                \"type\": \"string\",\n                \"analyzer\": \"ik\"\n            }\n        }\n    }\n}\n```\n返回结果\n```\n{\n   \"acknowledged\": true\n}\n```\n使用elasticsearch的分析器测试api\n```\nGET /index/_analyze?analyzer=ik&pretty=true\n{\n    \"地球如此大\"\n}\n```\n返回结果\n```\n{\n   \"tokens\": [\n      {\n         \"token\": \"地球\",\n         \"start_offset\": 8,\n         \"end_offset\": 10,\n         \"type\": \"CN_WORD\",\n         \"position\": 1\n      },\n      {\n         \"token\": \"如此\",\n         \"start_offset\": 10,\n         \"end_offset\": 12,\n         \"type\": \"CN_WORD\",\n         \"position\": 2\n      },\n      {\n         \"token\": \"如\",\n         \"start_offset\": 10,\n         \"end_offset\": 11,\n         \"type\": \"CN_WORD\",\n         \"position\": 3\n      },\n      {\n         \"token\": \"此\",\n         \"start_offset\": 11,\n         \"end_offset\": 12,\n         \"type\": \"CN_CHAR\",\n         \"position\": 4\n      },\n      {\n         \"token\": \"大\",\n         \"start_offset\": 12,\n         \"end_offset\": 13,\n         \"type\": \"CN_WORD\",\n         \"position\": 5\n      }\n   ]\n}\n```\n现在我们插入一条数据\n```\nPOST /index/iktest/1\n{\n    \"test\":\"我们要保护地球\"\n}\n```\n```\n{\n   \"_index\": \"index\",\n   \"_type\": \"iktest\",\n   \"_id\": \"1\",\n   \"_version\": 1,\n   \"created\": true\n}\n```\n搜索一下\n```\nPOST /index/iktest/_search\n{\n    \"query\": {\n        \"term\": {\n           \"test\": {\n              \"value\": \"我们\"\n           }\n        }\n    }\n}\n```\n返回结果\n```\n{\n   \"took\": 2,\n   \"timed_out\": false,\n   \"_shards\": {\n      \"total\": 5,\n      \"successful\": 5,\n      \"failed\": 0\n   },\n   \"hits\": {\n      \"total\": 1,\n      \"max_score\": 0.11506981,\n      \"hits\": [\n         {\n            \"_index\": \"index\",\n            \"_type\": \"iktest\",\n            \"_id\": \"1\",\n            \"_score\": 0.11506981,\n            \"_source\": {\n               \"test\": \"我们要保护地球\"\n            }\n         }\n      ]\n   }\n}\n```","slug":"useik","published":1,"updated":"2015-11-20T01:58:46.078Z","comments":1,"photos":[],"link":"","_id":"cihppj1ex000hko366bh3i874"},{"title":"howtosearch","date":"2015-11-19T08:32:33.000Z","_content":"","source":"_posts/howtosearch.md","raw":"title: howtosearch\ndate: 2015-11-19 16:32:33\ntags:\n---\n","slug":"howtosearch","published":1,"updated":"2015-11-19T08:32:33.059Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cihppj1fb000mko36s3w1o08u"},{"layout":"elasticsearch","title":"ElasticSearch REST API 集锦","date":"2015-11-19T08:08:02.000Z","_content":"列出索引名称\n```\ncurl 'http://localhost:9200/_aliases?pretty=1'\n```\n查看所有索引状态\n```\ncurl 'http://localhost:9200/_stats?pretty=1'\n```\n<!--more-->\n列出集群索引\n```\ncurl  'http://127.0.0.1:9200/_cat/indices?pretty=1'\n```\n查看索引大小\n```\ncurl 'http://localhost:9200/_cat/indices?bytes=kb'\n```\n获取所有mapping\n```\ncurl -XGET 'http://localhost:9200/_mapping?pretty=1'\n```\n集群健康查看\n```\ncurl 'http://localhost:9200/_cat/health?v'\n```\n查看集群线程池\n```\ncurl 'http://localhost:9200/_cat/thread_pool?v'\n```\n查看磁盘使用情况\n```\ncurl 'http://localhost:9200/_cat/allocation?v'\n```\n节点健康查看\n```\ncurl 'http://127.0.0.1:9200/_cat/nodes?v'\n```\n查看进程信息 打开文件数，是否锁定内存等\n```\ncurl 'http://127.0.0.1:9200/_nodes/process?pretty'\n```\n集群健康\n```\ncurl -XGET 'http://localhost:9200/_cluster/health?pretty=true'\n```\n关闭所有节点\n```\ncurl -XPOST 'http://localhost:9200/_shutdown'\n```\n关闭指定节点\n```\ncurl -XPOST 'http://localhost:9200/_cluster/nodes/nodeId1,nodeId2/_shutdown'\n```\n延迟关闭\n```\ncurl -XPOST 'http://localhost:9200/_cluster/nodes/_local/_shutdown?delay=10s'\n```\n---\n在Elasticsearch集群中可以监控统计很多信息，集群健康(cluster health)。ES中用三种颜色状态表示:green,yellow,red.</br>\n`Green`：所有主分片和副本分片都可用</br>\n`Yellow`：所有主分片可用，但不是所有副本分片都可用</br>\n`Red`：不是所有的主分片都可用</br>\n\n---\n一些安全性的设置\n```\naction.disable_close_all_indices: true     #禁止关闭索引\naction.disable_delete_all_indices: true    #禁止删除索引\naction.disable_shutdown: true              #禁止关闭节点\n```","source":"_posts/esrestapi.md","raw":"layout: elasticsearch\ntitle: ElasticSearch REST API 集锦\ndate: 2015-11-19 16:08:02\ntags: [elasticsearch,api,REST]\n---\n列出索引名称\n```\ncurl 'http://localhost:9200/_aliases?pretty=1'\n```\n查看所有索引状态\n```\ncurl 'http://localhost:9200/_stats?pretty=1'\n```\n<!--more-->\n列出集群索引\n```\ncurl  'http://127.0.0.1:9200/_cat/indices?pretty=1'\n```\n查看索引大小\n```\ncurl 'http://localhost:9200/_cat/indices?bytes=kb'\n```\n获取所有mapping\n```\ncurl -XGET 'http://localhost:9200/_mapping?pretty=1'\n```\n集群健康查看\n```\ncurl 'http://localhost:9200/_cat/health?v'\n```\n查看集群线程池\n```\ncurl 'http://localhost:9200/_cat/thread_pool?v'\n```\n查看磁盘使用情况\n```\ncurl 'http://localhost:9200/_cat/allocation?v'\n```\n节点健康查看\n```\ncurl 'http://127.0.0.1:9200/_cat/nodes?v'\n```\n查看进程信息 打开文件数，是否锁定内存等\n```\ncurl 'http://127.0.0.1:9200/_nodes/process?pretty'\n```\n集群健康\n```\ncurl -XGET 'http://localhost:9200/_cluster/health?pretty=true'\n```\n关闭所有节点\n```\ncurl -XPOST 'http://localhost:9200/_shutdown'\n```\n关闭指定节点\n```\ncurl -XPOST 'http://localhost:9200/_cluster/nodes/nodeId1,nodeId2/_shutdown'\n```\n延迟关闭\n```\ncurl -XPOST 'http://localhost:9200/_cluster/nodes/_local/_shutdown?delay=10s'\n```\n---\n在Elasticsearch集群中可以监控统计很多信息，集群健康(cluster health)。ES中用三种颜色状态表示:green,yellow,red.</br>\n`Green`：所有主分片和副本分片都可用</br>\n`Yellow`：所有主分片可用，但不是所有副本分片都可用</br>\n`Red`：不是所有的主分片都可用</br>\n\n---\n一些安全性的设置\n```\naction.disable_close_all_indices: true     #禁止关闭索引\naction.disable_delete_all_indices: true    #禁止删除索引\naction.disable_shutdown: true              #禁止关闭节点\n```","slug":"esrestapi","published":1,"updated":"2015-11-19T08:37:28.355Z","comments":1,"photos":[],"link":"","_id":"cihppj1fw000nko36lvuij0w7"},{"layout":"elasticsearch","title":"elasticsearch 插件安装","date":"2015-11-19T03:06:39.000Z","_content":"Elasticsearch可扩展性很强，插件也相当完善，下面介绍几个常用插件的安装和使用。\n### elasticsearch-head 插件\n首先进入 /elasticsearch/bin 目录，使用命令行：\n```\n./plugin -install mobz/elasticsearch-head\n```\n<!--more-->\n安装完成后在 /elasticsearch/plugins目录下看到head的文件夹\n在浏览器中输入`http://localhost:9200/_plugin/head/`可看到：\n<img src=\"head01.png\" />\n### bigdesk 插件\n安装命令：\n```\n./plugin -install lukas-vlcek/bigdesk\n```\n安装完成后在 /elasticsearch/plugins目录下看到bigdesk的文件夹\n在浏览器中输入`http://localhost:9200/_plugin/bigdesk/`可看到：\n<img src=\"bigdesk01.png\" />\n### kopf 插件\n```\n./plugin -install lmenezes/elasticsearch-kopf\n```\n安装完成后在 /elasticsearch/plugins目录下看到kopf的文件夹\n在浏览器中输入`http://localhost:9200/_plugin/kopf/`可看到：\n<img src=\"kopf01.png\" />\n---\n除了这些属于UI类别的插件外，还有其他许多功能上的插件\n比如中文分词插件：elasticsearch-analysis-ik\n比如拼音分词插件：elasticsearch-analysis-pinyin\n可以同步数据的river插件等。\n---\n在一款叫marvel的插件中，包含了一个名为sense的编辑器，可以方便的进行DSL的编写， 以后的内容中，我们将以sense的形式展现DSL代码内容。\n<img src=\"sense.png\" />\n","source":"_posts/esplugins.md","raw":"layout: elasticsearch\ntitle: elasticsearch 插件安装\ndate: 2015-11-19 11:06:39\ntags: [elasticsearch,plugin,head,bigdesk,kopf]\n---\nElasticsearch可扩展性很强，插件也相当完善，下面介绍几个常用插件的安装和使用。\n### elasticsearch-head 插件\n首先进入 /elasticsearch/bin 目录，使用命令行：\n```\n./plugin -install mobz/elasticsearch-head\n```\n<!--more-->\n安装完成后在 /elasticsearch/plugins目录下看到head的文件夹\n在浏览器中输入`http://localhost:9200/_plugin/head/`可看到：\n<img src=\"head01.png\" />\n### bigdesk 插件\n安装命令：\n```\n./plugin -install lukas-vlcek/bigdesk\n```\n安装完成后在 /elasticsearch/plugins目录下看到bigdesk的文件夹\n在浏览器中输入`http://localhost:9200/_plugin/bigdesk/`可看到：\n<img src=\"bigdesk01.png\" />\n### kopf 插件\n```\n./plugin -install lmenezes/elasticsearch-kopf\n```\n安装完成后在 /elasticsearch/plugins目录下看到kopf的文件夹\n在浏览器中输入`http://localhost:9200/_plugin/kopf/`可看到：\n<img src=\"kopf01.png\" />\n---\n除了这些属于UI类别的插件外，还有其他许多功能上的插件\n比如中文分词插件：elasticsearch-analysis-ik\n比如拼音分词插件：elasticsearch-analysis-pinyin\n可以同步数据的river插件等。\n---\n在一款叫marvel的插件中，包含了一个名为sense的编辑器，可以方便的进行DSL的编写， 以后的内容中，我们将以sense的形式展现DSL代码内容。\n<img src=\"sense.png\" />\n","slug":"esplugins","published":1,"updated":"2015-11-19T08:09:38.852Z","comments":1,"photos":[],"link":"","_id":"cihppj1g0000tko36o273l4ou"}],"PostAsset":[{"_id":"source/_posts/useik/ik01.png","post":"cihppj1ex000hko366bh3i874","slug":"ik01.png","modified":1},{"_id":"source/_posts/esplugins/bigdesk01.png","post":"cihppj1g0000tko36o273l4ou","slug":"bigdesk01.png","modified":1},{"_id":"source/_posts/esplugins/head01.png","post":"cihppj1g0000tko36o273l4ou","slug":"head01.png","modified":1},{"_id":"source/_posts/esplugins/kopf01.png","post":"cihppj1g0000tko36o273l4ou","slug":"kopf01.png","modified":1},{"_id":"source/_posts/esplugins/sense.png","post":"cihppj1g0000tko36o273l4ou","slug":"sense.png","modified":1}],"PostCategory":[],"PostTag":[{"post_id":"cihppj1e00000ko36q1wq7krc","tag_id":"cihppj1e80001ko36ljog7fq8","_id":"cihppj1ea0002ko36on9wonnk"},{"post_id":"cihppj1ei0003ko361kjgqthu","tag_id":"cihppj1e80001ko36ljog7fq8","_id":"cihppj1el0007ko364eoys0xa"},{"post_id":"cihppj1ei0003ko361kjgqthu","tag_id":"cihppj1ek0004ko36zyi6ans5","_id":"cihppj1el0008ko366b1wtji0"},{"post_id":"cihppj1ei0003ko361kjgqthu","tag_id":"cihppj1ek0005ko36g7os4nhh","_id":"cihppj1el0009ko368g4eyize"},{"post_id":"cihppj1ei0003ko361kjgqthu","tag_id":"cihppj1ek0006ko362x0mwg56","_id":"cihppj1el000ako36h8bx3nk5"},{"post_id":"cihppj1ep000bko367b7ytkli","tag_id":"cihppj1e80001ko36ljog7fq8","_id":"cihppj1es000dko369f8hghrw"},{"post_id":"cihppj1ep000bko367b7ytkli","tag_id":"cihppj1ek0004ko36zyi6ans5","_id":"cihppj1es000eko36ffvfczjl"},{"post_id":"cihppj1ep000bko367b7ytkli","tag_id":"cihppj1er000cko36ncvtfjvu","_id":"cihppj1es000fko36eqyjorfn"},{"post_id":"cihppj1ep000bko367b7ytkli","tag_id":"cihppj1ek0006ko362x0mwg56","_id":"cihppj1es000gko36sg6ng0x0"},{"post_id":"cihppj1ex000hko366bh3i874","tag_id":"cihppj1e80001ko36ljog7fq8","_id":"cihppj1ey000iko36y2e3qbho"},{"post_id":"cihppj1ex000hko366bh3i874","tag_id":"cihppj1ek0004ko36zyi6ans5","_id":"cihppj1ez000jko36m70y9f93"},{"post_id":"cihppj1ex000hko366bh3i874","tag_id":"cihppj1er000cko36ncvtfjvu","_id":"cihppj1ez000kko36s83w2whk"},{"post_id":"cihppj1ex000hko366bh3i874","tag_id":"cihppj1ek0006ko362x0mwg56","_id":"cihppj1f0000lko36niqwxr6k"},{"post_id":"cihppj1fw000nko36lvuij0w7","tag_id":"cihppj1e80001ko36ljog7fq8","_id":"cihppj1fy000qko36lm09utrk"},{"post_id":"cihppj1fw000nko36lvuij0w7","tag_id":"cihppj1fx000oko369b1a5rhu","_id":"cihppj1fy000rko364fdke84x"},{"post_id":"cihppj1fw000nko36lvuij0w7","tag_id":"cihppj1fx000pko36l5ulvx3z","_id":"cihppj1fy000sko36pmscuf7b"},{"post_id":"cihppj1g0000tko36o273l4ou","tag_id":"cihppj1e80001ko36ljog7fq8","_id":"cihppj1g5000xko36v44tb149"},{"post_id":"cihppj1g0000tko36o273l4ou","tag_id":"cihppj1ek0004ko36zyi6ans5","_id":"cihppj1g6000yko36ualqgdch"},{"post_id":"cihppj1g0000tko36o273l4ou","tag_id":"cihppj1g2000uko36slvenff8","_id":"cihppj1g6000zko368jvq4p3u"},{"post_id":"cihppj1g0000tko36o273l4ou","tag_id":"cihppj1g4000vko36wxc3cs1p","_id":"cihppj1g60010ko36ky9p8f8r"},{"post_id":"cihppj1g0000tko36o273l4ou","tag_id":"cihppj1g4000wko369vkcoku2","_id":"cihppj1g60011ko36sdpixibf"}],"Tag":[{"name":"elasticsearch","_id":"cihppj1e80001ko36ljog7fq8"},{"name":"plugin","_id":"cihppj1ek0004ko36zyi6ans5"},{"name":"pinyin","_id":"cihppj1ek0005ko36g7os4nhh"},{"name":"分词","_id":"cihppj1ek0006ko362x0mwg56"},{"name":"ik","_id":"cihppj1er000cko36ncvtfjvu"},{"name":"api","_id":"cihppj1fx000oko369b1a5rhu"},{"name":"REST","_id":"cihppj1fx000pko36l5ulvx3z"},{"name":"head","_id":"cihppj1g2000uko36slvenff8"},{"name":"bigdesk","_id":"cihppj1g4000vko36wxc3cs1p"},{"name":"kopf","_id":"cihppj1g4000wko369vkcoku2"}]}}